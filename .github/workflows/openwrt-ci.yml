#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Update feeds
        run: |
          echo 'src-git helloworld https://github.com/fw876/helloworld' >> ./feeds.conf.default
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_ARIA2_BITTORRENT=y
          CONFIG_ARIA2_NOXML=y
          CONFIG_ARIA2_OPENSSL=y
          CONFIG_ARIA2_WEBSOCKET=y
          CONFIG_LIBCURL_COOKIES=y
          CONFIG_LIBCURL_FILE=y
          CONFIG_LIBCURL_FTP=y
          CONFIG_LIBCURL_HTTP=y
          CONFIG_LIBCURL_MBEDTLS=y
          CONFIG_LIBCURL_NO_SMB="!"
          CONFIG_LIBCURL_PROXY=y
          CONFIG_OPENVPN_openssl_ENABLE_DEF_AUTH=y
          CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
          CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
          CONFIG_OPENVPN_openssl_ENABLE_LZO=y
          CONFIG_OPENVPN_openssl_ENABLE_MULTIHOME=y
          CONFIG_OPENVPN_openssl_ENABLE_PF=y
          CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
          CONFIG_OPENVPN_openssl_ENABLE_SERVER=y
          CONFIG_OPENVPN_openssl_ENABLE_SMALL=y
          CONFIG_PACKAGE_aria2=y
          CONFIG_PACKAGE_ariang=y
          CONFIG_PACKAGE_ca-bundle=y
          CONFIG_PACKAGE_frpc=y
          CONFIG_PACKAGE_fuse-utils=y
          CONFIG_PACKAGE_hd-idle=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-ipopt=y
          CONFIG_PACKAGE_kmod-crypto-md4=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-fs-cifs=y
          CONFIG_PACKAGE_kmod-fuse=y
          CONFIG_PACKAGE_kmod-ifb=y
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-ipopt=y
          CONFIG_PACKAGE_kmod-sched-cake=y
          CONFIG_PACKAGE_kmod-sched-cake-virtual=y
          CONFIG_PACKAGE_kmod-sched-core=y
          CONFIG_PACKAGE_kmod-udptunnel4=y
          CONFIG_PACKAGE_kmod-udptunnel6=y
          CONFIG_PACKAGE_kmod-usb-printer=y
          CONFIG_PACKAGE_kmod-wireguard=y
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libcurl=y
          CONFIG_PACKAGE_libdb47=y
          CONFIG_PACKAGE_libffi=y
          CONFIG_PACKAGE_libfuse=y
          CONFIG_PACKAGE_libgdbm=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblzma=y
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_libxml2=y
          CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_luci-app-cifs-mount=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-hd-idle=y
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-openvpn=y
          CONFIG_PACKAGE_luci-app-openvpn-server=y
          CONFIG_PACKAGE_luci-app-rclone=y
          CONFIG_PACKAGE_luci-app-shadowsocks-libev=y
          CONFIG_PACKAGE_luci-app-sqm=y
          CONFIG_PACKAGE_luci-app-squid=y
          CONFIG_PACKAGE_luci-app-ssrserver-python=y
          CONFIG_PACKAGE_luci-app-transmission=y
          CONFIG_PACKAGE_luci-app-usb-printer=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          CONFIG_PACKAGE_luci-app-wireguard=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-i18n-aria2-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-cifs-mount-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-frpc-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-hd-idle-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-openvpn-server-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-openvpn-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-rclone-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-sqm-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ssrserver-python-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-transmission-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-usb-printer-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-v2ray-server-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-wireguard-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-wrtbwmon-zh-cn=y
          CONFIG_PACKAGE_luci-proto-wireguard=y
          CONFIG_PACKAGE_mwan3=y
          CONFIG_PACKAGE_openvpn-easy-rsa=y
          CONFIG_PACKAGE_openvpn-openssl=y
          CONFIG_PACKAGE_p910nd=y
          CONFIG_PACKAGE_python3=y
          CONFIG_PACKAGE_python3-asyncio=y
          CONFIG_PACKAGE_python3-base=y
          CONFIG_PACKAGE_python3-cgi=y
          CONFIG_PACKAGE_python3-cgitb=y
          CONFIG_PACKAGE_python3-codecs=y
          CONFIG_PACKAGE_python3-ctypes=y
          CONFIG_PACKAGE_python3-dbm=y
          CONFIG_PACKAGE_python3-decimal=y
          CONFIG_PACKAGE_python3-distutils=y
          CONFIG_PACKAGE_python3-email=y
          CONFIG_PACKAGE_python3-gdbm=y
          CONFIG_PACKAGE_python3-light=y
          CONFIG_PACKAGE_python3-logging=y
          CONFIG_PACKAGE_python3-lzma=y
          CONFIG_PACKAGE_python3-multiprocessing=y
          CONFIG_PACKAGE_python3-ncurses=y
          CONFIG_PACKAGE_python3-openssl=y
          CONFIG_PACKAGE_python3-pydoc=y
          CONFIG_PACKAGE_python3-sqlite3=y
          CONFIG_PACKAGE_python3-unittest=y
          CONFIG_PACKAGE_python3-urllib=y
          CONFIG_PACKAGE_python3-xml=y
          CONFIG_PACKAGE_rclone=y
          CONFIG_PACKAGE_rclone-ng=y
          CONFIG_PACKAGE_rclone-webui-react=y
          CONFIG_PACKAGE_sqm-scripts=y
          CONFIG_PACKAGE_squid=y
          CONFIG_PACKAGE_tc=y
          CONFIG_PACKAGE_transmission-daemon-openssl=y
          CONFIG_PACKAGE_transmission-web-control=y
          CONFIG_PACKAGE_wireguard-tools=y
          CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y
          CONFIG_SQLITE3_FTS3=y
          CONFIG_SQLITE3_FTS4=y
          CONFIG_SQLITE3_FTS5=y
          CONFIG_SQLITE3_JSON1=y
          CONFIG_SQLITE3_RTREE=y
          CONFIG_SQUID_enable-dlmalloc=y
          CONFIG_SQUID_enable-ipv6=y
          CONFIG_SQUID_use-openssl=y
          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
